#********************************************************************************
# WORLD CONFIGURATION
#********************************************************************************

# Coordinates of all goals
world.config.goals = "[-23 8] [-23 1] [-21 -4] [-17 7] [-17 -2] [-17 -5] [-14 7] [-12 -5] [-10 7] [-9 0] [-7 7] [-6 -5] [-5 -1] [-2 8.5] [-1 3] [-1 0] [2 0] [2 -8] <5.8 7> [8 -8] [10 7] [11 0] [11 -8] [14 7] [14 0] [14 -5] <17.5 8> <20 8> [23 -4]"
world.agents = red blue green yellow black pink orange brown purple white

# in metres
world.config.close_enough 					= 1.0


#********************************************************************************
# AUCTION CONFIGURATION
#********************************************************************************

# one of MIN_COST, REGRET_CLEARING
auction.winner_determination.type = REGRET_CLEARING

# one of MINISUM, MINIMAX
auction.objective.type = MINIMAX

# Time out for waiting for response of other robots in ms
auction.selling.timeout_for_responses = 5000

# Maximum number of TriggerSale cycles till new auction is forced to start
auction.selling.max_wait_cycles_for_restart = 15

auction.bidding.max_bundles = 25
auction.bidding.bundle_size = 1


#********************************************************************************
# ROBOT CONFIGURATION
#********************************************************************************

# Full simulation mode ignores Ice/Orca components
robot.full_simulation_mode					= true

# Arguments for initialising ICE.
#  These should include a '--Ice.Default.Locator=...'
#robot.ice=--Ice.Default.Locator=IceGrid/Locator:default -p 12000
robot.ice = --Ice.Default.Locator=IceGrid/Locator:tcp -h vm-ubuntu -p 12000

# Cycle time of behaviours in seconds.
#  A cycle time of 0 disables the behaviour.
robot.cycles.driving								= 5
robot.cycles.robot_discovery				= 15
robot.cycles.random_task_generation	= 0
robot.cycles.trigger_sales					= 1

# Active randomisation of task generation and sale trigger behaviours
robot.randomise_cycles_by						= 0

# Names, time outs and maximum retry counts for ORCA components.
#  Names can use '<robo_colour>' as place holder.
#  Time outs are in milliseconds.
robot.component.goal_eval.name			= pathevaluator@vm-ubuntu/pathevaluator
# Goal eval will be tried up to #retries times with the timeout increasing exponentially between each retry
robot.component.goal_eval.timeout		= 2500
robot.component.goal_eval.retries		= 7
robot.component.goal_eval.backoff		= 1.5
robot.component.path_follower.name	= pathfollower2d@vm-ubuntu/<robo_colour>.goalplanner
robot.component.localiser.name			= localise2d@vm-ubuntu/<robo_colour>.simlocaliser
robot.component.localiser.timeout		= 500
